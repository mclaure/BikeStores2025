/*
Deployment script for BikeStores

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "BikeStores"
:setvar DefaultFilePrefix "BikeStores"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping Foreign Key unnamed constraint on [production].[products]...';


GO
ALTER TABLE [production].[products] DROP CONSTRAINT [FK__products__catego__60A75C0F];


GO
PRINT N'Dropping Foreign Key unnamed constraint on [production].[products]...';


GO
ALTER TABLE [production].[products] DROP CONSTRAINT [FK__products__brand___619B8048];


GO
PRINT N'Dropping Foreign Key [sales].[FK_orders_order_item]...';


GO
ALTER TABLE [sales].[order_items] DROP CONSTRAINT [FK_orders_order_item];


GO
PRINT N'Dropping Foreign Key [sales].[FK_orders_customers]...';


GO
ALTER TABLE [sales].[orders] DROP CONSTRAINT [FK_orders_customers];


GO
PRINT N'Dropping Foreign Key [sales].[FK_orders_staff]...';


GO
ALTER TABLE [sales].[orders] DROP CONSTRAINT [FK_orders_staff];


GO
PRINT N'Dropping Foreign Key [sales].[FK_orders_stores]...';


GO
ALTER TABLE [sales].[orders] DROP CONSTRAINT [FK_orders_stores];


GO
PRINT N'Starting rebuilding table [sales].[orders]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [sales].[tmp_ms_xx_orders] (
    [order_id]      INT     IDENTITY (1, 1) NOT NULL,
    [customer_id]   INT     NULL,
    [order_status]  TINYINT NOT NULL,
    [order_date]    DATE    NOT NULL,
    [required_date] DATE    NOT NULL,
    [shipped_date]  DATE    NULL,
    [store_id]      INT     NOT NULL,
    [staff_id]      INT     NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_orders1] PRIMARY KEY CLUSTERED ([order_id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [sales].[orders])
    BEGIN
        SET IDENTITY_INSERT [sales].[tmp_ms_xx_orders] ON;
        INSERT INTO [sales].[tmp_ms_xx_orders] ([order_id], [customer_id], [order_status], [order_date], [required_date], [shipped_date], [store_id], [staff_id])
        SELECT   [order_id],
                 [customer_id],
                 [order_status],
                 [order_date],
                 [required_date],
                 [shipped_date],
                 [store_id],
                 [staff_id]
        FROM     [sales].[orders]
        ORDER BY [order_id] ASC;
        SET IDENTITY_INSERT [sales].[tmp_ms_xx_orders] OFF;
    END

DROP TABLE [sales].[orders];

EXECUTE sp_rename N'[sales].[tmp_ms_xx_orders]', N'orders';

EXECUTE sp_rename N'[sales].[tmp_ms_xx_constraint_PK_orders1]', N'PK_orders', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Foreign Key [sales].[FK_orders_order_item]...';


GO
ALTER TABLE [sales].[order_items] WITH NOCHECK
    ADD CONSTRAINT [FK_orders_order_item] FOREIGN KEY ([order_id]) REFERENCES [sales].[orders] ([order_id]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key [sales].[FK_orders_customers]...';


GO
ALTER TABLE [sales].[orders] WITH NOCHECK
    ADD CONSTRAINT [FK_orders_customers] FOREIGN KEY ([customer_id]) REFERENCES [sales].[customers] ([customer_id]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key [sales].[FK_orders_staff]...';


GO
ALTER TABLE [sales].[orders] WITH NOCHECK
    ADD CONSTRAINT [FK_orders_staff] FOREIGN KEY ([staff_id]) REFERENCES [sales].[staffs] ([staff_id]);


GO
PRINT N'Creating Foreign Key [sales].[FK_orders_stores]...';


GO
ALTER TABLE [sales].[orders] WITH NOCHECK
    ADD CONSTRAINT [FK_orders_stores] FOREIGN KEY ([store_id]) REFERENCES [sales].[stores] ([store_id]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key [production].[FK_products_brands]...';


GO
ALTER TABLE [production].[products] WITH NOCHECK
    ADD CONSTRAINT [FK_products_brands] FOREIGN KEY ([brand_id]) REFERENCES [production].[brands] ([brand_id]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key [production].[FK_products_categories]...';


GO
ALTER TABLE [production].[products] WITH NOCHECK
    ADD CONSTRAINT [FK_products_categories] FOREIGN KEY ([category_id]) REFERENCES [production].[categories] ([category_id]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [sales].[order_items] WITH CHECK CHECK CONSTRAINT [FK_orders_order_item];

ALTER TABLE [sales].[orders] WITH CHECK CHECK CONSTRAINT [FK_orders_customers];

ALTER TABLE [sales].[orders] WITH CHECK CHECK CONSTRAINT [FK_orders_staff];

ALTER TABLE [sales].[orders] WITH CHECK CHECK CONSTRAINT [FK_orders_stores];

ALTER TABLE [production].[products] WITH CHECK CHECK CONSTRAINT [FK_products_brands];

ALTER TABLE [production].[products] WITH CHECK CHECK CONSTRAINT [FK_products_categories];


GO
PRINT N'Update complete.';


GO
