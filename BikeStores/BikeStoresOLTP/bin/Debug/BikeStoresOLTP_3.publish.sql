/*
Deployment script for BikeStores

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "BikeStores"
:setvar DefaultFilePrefix "BikeStores"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating Table [production].[products]...';


GO
CREATE TABLE [production].[products] (
    [product_id]   INT             IDENTITY (1, 1) NOT NULL,
    [product_name] VARCHAR (255)   NOT NULL,
    [brand_id]     INT             NOT NULL,
    [category_id]  INT             NOT NULL,
    [model_year]   SMALLINT        NOT NULL,
    [list_price]   DECIMAL (10, 2) NOT NULL,
    PRIMARY KEY CLUSTERED ([product_id] ASC)
);


GO
PRINT N'Creating Table [production].[stocks]...';


GO
CREATE TABLE [production].[stocks] (
    [store_id]   INT NOT NULL,
    [product_id] INT NOT NULL,
    [quantity]   INT NULL,
    PRIMARY KEY CLUSTERED ([store_id] ASC, [product_id] ASC)
);


GO
PRINT N'Creating Table [sales].[customers]...';


GO
CREATE TABLE [sales].[customers] (
    [customer_id] INT           IDENTITY (1, 1) NOT NULL,
    [first_name]  VARCHAR (255) NOT NULL,
    [last_name]   VARCHAR (255) NOT NULL,
    [phone]       VARCHAR (25)  NULL,
    [email]       VARCHAR (255) NOT NULL,
    [street]      VARCHAR (255) NULL,
    [city]        VARCHAR (50)  NULL,
    [state]       VARCHAR (25)  NULL,
    [zip_code]    VARCHAR (5)   NULL,
    PRIMARY KEY CLUSTERED ([customer_id] ASC)
);


GO
PRINT N'Creating Table [sales].[order_items]...';


GO
CREATE TABLE [sales].[order_items] (
    [order_id]   INT             NOT NULL,
    [item_id]    INT             NOT NULL,
    [product_id] INT             NOT NULL,
    [quantity]   INT             NOT NULL,
    [list_price] DECIMAL (10, 2) NOT NULL,
    [discount]   DECIMAL (4, 2)  NOT NULL,
    PRIMARY KEY CLUSTERED ([order_id] ASC, [item_id] ASC)
);


GO
PRINT N'Creating Table [sales].[orders]...';


GO
CREATE TABLE [sales].[orders] (
    [order_id]      INT     IDENTITY (1, 1) NOT NULL,
    [customer_id]   INT     NULL,
    [order_status]  TINYINT NOT NULL,
    [order_date]    DATE    NOT NULL,
    [required_date] DATE    NOT NULL,
    [shipped_date]  DATE    NULL,
    [store_id]      INT     NOT NULL,
    [staff_id]      INT     NOT NULL,
    PRIMARY KEY CLUSTERED ([order_id] ASC)
);


GO
PRINT N'Creating Table [sales].[staffs]...';


GO
CREATE TABLE [sales].[staffs] (
    [staff_id]   INT           IDENTITY (1, 1) NOT NULL,
    [first_name] VARCHAR (50)  NOT NULL,
    [last_name]  VARCHAR (50)  NOT NULL,
    [email]      VARCHAR (255) NOT NULL,
    [phone]      VARCHAR (25)  NULL,
    [active]     TINYINT       NOT NULL,
    [store_id]   INT           NOT NULL,
    [manager_id] INT           NULL,
    PRIMARY KEY CLUSTERED ([staff_id] ASC),
    UNIQUE NONCLUSTERED ([email] ASC)
);


GO
PRINT N'Creating Table [sales].[stores]...';


GO
CREATE TABLE [sales].[stores] (
    [store_id]   INT           IDENTITY (1, 1) NOT NULL,
    [store_name] VARCHAR (255) NOT NULL,
    [phone]      VARCHAR (25)  NULL,
    [email]      VARCHAR (255) NULL,
    [street]     VARCHAR (255) NULL,
    [city]       VARCHAR (255) NULL,
    [state]      VARCHAR (10)  NULL,
    [zip_code]   VARCHAR (5)   NULL,
    PRIMARY KEY CLUSTERED ([store_id] ASC)
);


GO
PRINT N'Creating Default Constraint unnamed constraint on [sales].[order_items]...';


GO
ALTER TABLE [sales].[order_items]
    ADD DEFAULT 0 FOR [discount];


GO
PRINT N'Creating Foreign Key unnamed constraint on [production].[products]...';


GO
ALTER TABLE [production].[products] WITH NOCHECK
    ADD FOREIGN KEY ([category_id]) REFERENCES [production].[categories] ([category_id]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key unnamed constraint on [production].[products]...';


GO
ALTER TABLE [production].[products] WITH NOCHECK
    ADD FOREIGN KEY ([brand_id]) REFERENCES [production].[brands] ([brand_id]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key unnamed constraint on [production].[stocks]...';


GO
ALTER TABLE [production].[stocks] WITH NOCHECK
    ADD FOREIGN KEY ([store_id]) REFERENCES [sales].[stores] ([store_id]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key unnamed constraint on [production].[stocks]...';


GO
ALTER TABLE [production].[stocks] WITH NOCHECK
    ADD FOREIGN KEY ([product_id]) REFERENCES [production].[products] ([product_id]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key unnamed constraint on [sales].[order_items]...';


GO
ALTER TABLE [sales].[order_items] WITH NOCHECK
    ADD FOREIGN KEY ([order_id]) REFERENCES [sales].[orders] ([order_id]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key unnamed constraint on [sales].[order_items]...';


GO
ALTER TABLE [sales].[order_items] WITH NOCHECK
    ADD FOREIGN KEY ([product_id]) REFERENCES [production].[products] ([product_id]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key unnamed constraint on [sales].[orders]...';


GO
ALTER TABLE [sales].[orders] WITH NOCHECK
    ADD FOREIGN KEY ([customer_id]) REFERENCES [sales].[customers] ([customer_id]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key unnamed constraint on [sales].[orders]...';


GO
ALTER TABLE [sales].[orders] WITH NOCHECK
    ADD FOREIGN KEY ([store_id]) REFERENCES [sales].[stores] ([store_id]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key unnamed constraint on [sales].[orders]...';


GO
ALTER TABLE [sales].[orders] WITH NOCHECK
    ADD FOREIGN KEY ([staff_id]) REFERENCES [sales].[staffs] ([staff_id]);


GO
PRINT N'Creating Foreign Key unnamed constraint on [sales].[staffs]...';


GO
ALTER TABLE [sales].[staffs] WITH NOCHECK
    ADD FOREIGN KEY ([store_id]) REFERENCES [sales].[stores] ([store_id]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key unnamed constraint on [sales].[staffs]...';


GO
ALTER TABLE [sales].[staffs] WITH NOCHECK
    ADD FOREIGN KEY ([manager_id]) REFERENCES [sales].[staffs] ([staff_id]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'production.products'), OBJECT_ID(N'production.stocks'), OBJECT_ID(N'sales.order_items'), OBJECT_ID(N'sales.orders'), OBJECT_ID(N'sales.staffs'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
